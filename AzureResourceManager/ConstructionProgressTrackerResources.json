{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "0.0.1",
  "parameters": {
    "websiteName": {
      "type": "string"
    }
  },
  "variables": {
    "storageName": "[concat(parameters('websiteName'), 'storage')]",
    "databaseName": "[concat(parameters('websiteName'), 'db')]",
    "dbConnectionString": "[concat('Server=tcp:', variables('databaseName'), '.database.windows.net,1433;Database=', variables('databaseName'), ';User ID=szabl@', variables('databaseName'), ';Password=P@ssw0rd;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('storageName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "Standard_GRS"
      }
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('databaseName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "administratorLogin": "szabl",
        "administratorLoginPassword": "P@ssw0rd"
      },
      "resources": [
        {
          "type": "databases",
          "apiVersion": "2015-05-01-preview",
          "name": "[variables('databaseName')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('databaseName'))]"
          ],
          "properties": {
            "edition": "Basic"
          }
        },
        {
          "type": "firewallrules",
          "apiVersion": "2015-05-01-preview",
          "name": "AllowAllWindowsAzureIps",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('databaseName'))]"
          ],
          "kind": "v2.0",
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-08-01",
      "name": "[parameters('websiteName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "F1",
        "tier": "Free",
        "size": "F1"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2015-08-01",
      "name": "[parameters('websiteName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', parameters('websiteName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('websiteName'))]"
      },
      "resources": [
        {
          "type": "sourcecontrols",
          "apiVersion": "2015-08-01",
          "name": "web",
          "location": "West Europe",
          "properties": {
            "repoUrl": "https://github.com/szabl/AzureConstructionsProgressTracker-AzureWorkshopFP",
            "branch": "master",
            "isManualIntegration": false
          },
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', parameters('websiteName'))]"
          ]
        },
        {
          "type": "config",
          "apiVersion": "2015-08-01",
          "name": "connectionstrings",
          "location": "West Europe",
          "properties": {
            "ConstructionsProgressTrackerContext": {
              "value": "[variables('dbConnectionString')]",
              "type": "2"
            },
            "AzureWebJobsDashboard": {
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2015-05-01-preview').key1, ';BlobEndpoint=https://', variables('storageName'), '.blob.core.windows.net/;TableEndpoint=https://', variables('storageName'), '.table.core.windows.net/;QueueEndpoint=https://', variables('storageName'), '.queue.core.windows.net/;FileEndpoint=https://', variables('storageName'), '.file.core.windows.net/')]",
              "type": "2"
            }
          },
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', parameters('websiteName'))]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]"
          ]
        }
      ]
    }
  ]
}